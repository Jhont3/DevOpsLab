{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.177.2456",
      "templateHash": "1309346988136093619"
    }
  },
  "parameters": {
    "clientName": {
      "type": "string",
      "metadata": {
        "description": "Client name (e.g., elite, jarandes, ght)"
      }
    },
    "environmentName": {
      "type": "string",
      "metadata": {
        "description": "Environment name (testing or main)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "East US",
      "metadata": {
        "description": "Azure region for resources"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Resource group name"
      }
    },
    "cosmosDbAccountName": {
      "type": "string",
      "metadata": {
        "description": "Cosmos DB account name"
      }
    },
    "cosmosDbName": {
      "type": "string",
      "metadata": {
        "description": "Cosmos DB database name"
      }
    },
    "coreFunctions": {
      "type": "array",
      "metadata": {
        "description": "Core functions to deploy"
      }
    },
    "pluginFunctions": {
      "type": "array",
      "metadata": {
        "description": "Plugin functions to deploy"
      }
    },
    "functionMappings": {
      "type": "object",
      "metadata": {
        "description": "Function mappings configuration"
      }
    },
    "cosmosCollections": {
      "type": "array",
      "metadata": {
        "description": "Cosmos DB collections configuration"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2023-07-01",
      "name": "[parameters('resourceGroupName')]",
      "location": "[parameters('location')]",
      "tags": {
        "environment": "[parameters('environmentName')]",
        "client": "[parameters('clientName')]",
        "solution": "witag",
        "managedBy": "bicep"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('storageAccount-{0}-{1}', parameters('clientName'), parameters('environmentName'))]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[format('stwitag{0}{1}', parameters('clientName'), parameters('environmentName'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "clientName": {
            "value": "[parameters('clientName')]"
          },
          "environmentName": {
            "value": "[parameters('environmentName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "427768938491102517"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Storage account name"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for the storage account"
              }
            },
            "clientName": {
              "type": "string",
              "metadata": {
                "description": "Client name"
              }
            },
            "environmentName": {
              "type": "string",
              "metadata": {
                "description": "Environment name"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "defaultToOAuthAuthentication": false,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "virtualNetworkRules": [],
                  "ipRules": [],
                  "defaultAction": "Allow"
                },
                "encryption": {
                  "services": {
                    "file": {
                      "keyType": "Account",
                      "enabled": true
                    },
                    "blob": {
                      "keyType": "Account",
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                }
              },
              "tags": {
                "environment": "[parameters('environmentName')]",
                "client": "[parameters('clientName')]",
                "solution": "witag",
                "managedBy": "bicep"
              }
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "storageAccountKey": {
              "type": "string",
              "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
            },
            "storageAccountConnectionString": {
              "type": "string",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value)]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('cosmosDb-{0}-{1}', parameters('clientName'), parameters('environmentName'))]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "accountName": {
            "value": "[parameters('cosmosDbAccountName')]"
          },
          "databaseName": {
            "value": "[parameters('cosmosDbName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "clientName": {
            "value": "[parameters('clientName')]"
          },
          "environmentName": {
            "value": "[parameters('environmentName')]"
          },
          "collections": {
            "value": "[parameters('cosmosCollections')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "8717054524982802320"
            }
          },
          "parameters": {
            "accountName": {
              "type": "string",
              "metadata": {
                "description": "Cosmos DB account name"
              }
            },
            "databaseName": {
              "type": "string",
              "metadata": {
                "description": "Database name"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for the Cosmos DB account"
              }
            },
            "clientName": {
              "type": "string",
              "metadata": {
                "description": "Client name"
              }
            },
            "environmentName": {
              "type": "string",
              "metadata": {
                "description": "Environment name"
              }
            },
            "collections": {
              "type": "array",
              "metadata": {
                "description": "Collections configuration"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "apiVersion": "2023-04-15",
              "name": "[parameters('accountName')]",
              "location": "[parameters('location')]",
              "kind": "GlobalDocumentDB",
              "properties": {
                "consistencyPolicy": {
                  "defaultConsistencyLevel": "Session"
                },
                "locations": [
                  {
                    "locationName": "[parameters('location')]",
                    "failoverPriority": 0,
                    "isZoneRedundant": false
                  }
                ],
                "databaseAccountOfferType": "Standard",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "capabilities": [
                  {
                    "name": "EnableServerless"
                  }
                ],
                "publicNetworkAccess": "Enabled",
                "networkAclBypass": "None",
                "disableLocalAuth": false,
                "enableAnalyticalStorage": false,
                "enableFreeTier": false
              },
              "tags": {
                "environment": "[parameters('environmentName')]",
                "client": "[parameters('clientName')]",
                "solution": "witag",
                "managedBy": "bicep"
              }
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}/{1}', parameters('accountName'), parameters('databaseName'))]",
              "properties": {
                "resource": {
                  "id": "[parameters('databaseName')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]"
              ]
            },
            {
              "copy": {
                "name": "cosmosContainers",
                "count": "[length(parameters('collections'))]"
              },
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}/{1}/{2}', parameters('accountName'), parameters('databaseName'), parameters('collections')[copyIndex()].name)]",
              "properties": {
                "resource": {
                  "id": "[parameters('collections')[copyIndex()].name]",
                  "partitionKey": {
                    "paths": [
                      "[parameters('collections')[copyIndex()].partitionKey]"
                    ],
                    "kind": "Hash"
                  },
                  "indexingPolicy": {
                    "indexingMode": "consistent",
                    "automatic": true,
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ],
                    "excludedPaths": [
                      {
                        "path": "/\"_etag\"/?"
                      }
                    ]
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('accountName'), parameters('databaseName'))]"
              ]
            }
          ],
          "outputs": {
            "accountName": {
              "type": "string",
              "value": "[parameters('accountName')]"
            },
            "databaseName": {
              "type": "string",
              "value": "[parameters('databaseName')]"
            },
            "connectionString": {
              "type": "string",
              "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName')), '2023-04-15').connectionStrings[0].connectionString]"
            },
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName')), '2023-04-15').documentEndpoint]"
            },
            "primaryKey": {
              "type": "string",
              "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName')), '2023-04-15').primaryMasterKey]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('appServicePlan-{0}-{1}', parameters('clientName'), parameters('environmentName'))]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "planName": {
            "value": "[format('asp-witag-{0}-{1}', parameters('clientName'), parameters('environmentName'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "clientName": {
            "value": "[parameters('clientName')]"
          },
          "environmentName": {
            "value": "[parameters('environmentName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "16280606696412583745"
            }
          },
          "parameters": {
            "planName": {
              "type": "string",
              "metadata": {
                "description": "App Service Plan name"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for the App Service Plan"
              }
            },
            "clientName": {
              "type": "string",
              "metadata": {
                "description": "Client name"
              }
            },
            "environmentName": {
              "type": "string",
              "metadata": {
                "description": "Environment name"
              }
            },
            "skuName": {
              "type": "string",
              "defaultValue": "Y1",
              "metadata": {
                "description": "App Service Plan SKU"
              }
            },
            "skuTier": {
              "type": "string",
              "defaultValue": "Dynamic",
              "metadata": {
                "description": "App Service Plan tier"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2023-01-01",
              "name": "[parameters('planName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('skuName')]",
                "tier": "[parameters('skuTier')]"
              },
              "kind": "functionapp",
              "properties": {
                "reserved": false
              },
              "tags": {
                "environment": "[parameters('environmentName')]",
                "client": "[parameters('clientName')]",
                "solution": "witag",
                "managedBy": "bicep"
              }
            }
          ],
          "outputs": {
            "planId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/serverfarms', parameters('planName'))]"
            },
            "planName": {
              "type": "string",
              "value": "[parameters('planName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    },
    {
      "copy": {
        "name": "coreFunctionApps",
        "count": "[length(parameters('coreFunctions'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('coreFunction-{0}-{1}-{2}', parameters('coreFunctions')[copyIndex()], parameters('clientName'), parameters('environmentName'))]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "functionAppName": {
            "value": "[format('{0}-{1}-{2}', parameters('coreFunctions')[copyIndex()], parameters('clientName'), parameters('environmentName'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "clientName": {
            "value": "[parameters('clientName')]"
          },
          "environmentName": {
            "value": "[parameters('environmentName')]"
          },
          "functionType": {
            "value": "[parameters('functionMappings')[parameters('coreFunctions')[copyIndex()]].type]"
          },
          "appServicePlanId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('appServicePlan-{0}-{1}', parameters('clientName'), parameters('environmentName'))), '2022-09-01').outputs.planId.value]"
          },
          "storageAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('storageAccount-{0}-{1}', parameters('clientName'), parameters('environmentName'))), '2022-09-01').outputs.storageAccountName.value]"
          },
          "storageAccountKey": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('storageAccount-{0}-{1}', parameters('clientName'), parameters('environmentName'))), '2022-09-01').outputs.storageAccountKey.value]"
          },
          "cosmosDbConnectionString": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('cosmosDb-{0}-{1}', parameters('clientName'), parameters('environmentName'))), '2022-09-01').outputs.connectionString.value]"
          },
          "cosmosDbName": {
            "value": "[parameters('cosmosDbName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "17819730334006556923"
            }
          },
          "parameters": {
            "functionAppName": {
              "type": "string",
              "metadata": {
                "description": "Function App name"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for the Function App"
              }
            },
            "clientName": {
              "type": "string",
              "metadata": {
                "description": "Client name"
              }
            },
            "environmentName": {
              "type": "string",
              "metadata": {
                "description": "Environment name"
              }
            },
            "functionType": {
              "type": "string",
              "metadata": {
                "description": "Function type (backend or frontend)"
              }
            },
            "appServicePlanId": {
              "type": "string",
              "metadata": {
                "description": "App Service Plan ID"
              }
            },
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Storage Account name"
              }
            },
            "storageAccountKey": {
              "type": "securestring",
              "metadata": {
                "description": "Storage Account key"
              }
            },
            "cosmosDbConnectionString": {
              "type": "string",
              "metadata": {
                "description": "Cosmos DB connection string"
              }
            },
            "cosmosDbName": {
              "type": "string",
              "metadata": {
                "description": "Cosmos DB database name"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2023-01-01",
              "name": "[parameters('functionAppName')]",
              "location": "[parameters('location')]",
              "kind": "functionapp",
              "properties": {
                "serverFarmId": "[parameters('appServicePlanId')]",
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageAccountName'), parameters('storageAccountKey'))]"
                    },
                    {
                      "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageAccountName'), parameters('storageAccountKey'))]"
                    },
                    {
                      "name": "WEBSITE_CONTENTSHARE",
                      "value": "[toLower(parameters('functionAppName'))]"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~4"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "dotnet"
                    },
                    {
                      "name": "WEBSITE_RUN_FROM_PACKAGE",
                      "value": "1"
                    },
                    {
                      "name": "CosmosDbConnectionString",
                      "value": "[parameters('cosmosDbConnectionString')]"
                    },
                    {
                      "name": "CosmosDbName",
                      "value": "[parameters('cosmosDbName')]"
                    },
                    {
                      "name": "CLIENT_NAME",
                      "value": "[parameters('clientName')]"
                    },
                    {
                      "name": "ENVIRONMENT_NAME",
                      "value": "[parameters('environmentName')]"
                    },
                    {
                      "name": "FUNCTION_TYPE",
                      "value": "[parameters('functionType')]"
                    }
                  ],
                  "netFrameworkVersion": "v6.0",
                  "use32BitWorkerProcess": false,
                  "cors": {
                    "allowedOrigins": [
                      "*"
                    ]
                  },
                  "ftpsState": "Disabled",
                  "minTlsVersion": "1.2",
                  "scmMinTlsVersion": "1.2",
                  "http20Enabled": true,
                  "alwaysOn": false
                },
                "httpsOnly": true,
                "clientAffinityEnabled": false
              },
              "tags": {
                "environment": "[parameters('environmentName')]",
                "client": "[parameters('clientName')]",
                "solution": "witag",
                "managedBy": "bicep",
                "functionType": "[parameters('functionType')]"
              }
            }
          ],
          "outputs": {
            "functionAppName": {
              "type": "string",
              "value": "[parameters('functionAppName')]"
            },
            "defaultHostName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2023-01-01').defaultHostName]"
            },
            "functionAppId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('appServicePlan-{0}-{1}', parameters('clientName'), parameters('environmentName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('cosmosDb-{0}-{1}', parameters('clientName'), parameters('environmentName')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('storageAccount-{0}-{1}', parameters('clientName'), parameters('environmentName')))]"
      ]
    },
    {
      "copy": {
        "name": "pluginFunctionApps",
        "count": "[length(parameters('pluginFunctions'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('pluginFunction-{0}-{1}-{2}', parameters('pluginFunctions')[copyIndex()], parameters('clientName'), parameters('environmentName'))]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "functionAppName": {
            "value": "[format('{0}-{1}-{2}', parameters('pluginFunctions')[copyIndex()], parameters('clientName'), parameters('environmentName'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "clientName": {
            "value": "[parameters('clientName')]"
          },
          "environmentName": {
            "value": "[parameters('environmentName')]"
          },
          "functionType": {
            "value": "[parameters('functionMappings')[parameters('pluginFunctions')[copyIndex()]].type]"
          },
          "appServicePlanId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('appServicePlan-{0}-{1}', parameters('clientName'), parameters('environmentName'))), '2022-09-01').outputs.planId.value]"
          },
          "storageAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('storageAccount-{0}-{1}', parameters('clientName'), parameters('environmentName'))), '2022-09-01').outputs.storageAccountName.value]"
          },
          "storageAccountKey": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('storageAccount-{0}-{1}', parameters('clientName'), parameters('environmentName'))), '2022-09-01').outputs.storageAccountKey.value]"
          },
          "cosmosDbConnectionString": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('cosmosDb-{0}-{1}', parameters('clientName'), parameters('environmentName'))), '2022-09-01').outputs.connectionString.value]"
          },
          "cosmosDbName": {
            "value": "[parameters('cosmosDbName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "17819730334006556923"
            }
          },
          "parameters": {
            "functionAppName": {
              "type": "string",
              "metadata": {
                "description": "Function App name"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for the Function App"
              }
            },
            "clientName": {
              "type": "string",
              "metadata": {
                "description": "Client name"
              }
            },
            "environmentName": {
              "type": "string",
              "metadata": {
                "description": "Environment name"
              }
            },
            "functionType": {
              "type": "string",
              "metadata": {
                "description": "Function type (backend or frontend)"
              }
            },
            "appServicePlanId": {
              "type": "string",
              "metadata": {
                "description": "App Service Plan ID"
              }
            },
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Storage Account name"
              }
            },
            "storageAccountKey": {
              "type": "securestring",
              "metadata": {
                "description": "Storage Account key"
              }
            },
            "cosmosDbConnectionString": {
              "type": "string",
              "metadata": {
                "description": "Cosmos DB connection string"
              }
            },
            "cosmosDbName": {
              "type": "string",
              "metadata": {
                "description": "Cosmos DB database name"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2023-01-01",
              "name": "[parameters('functionAppName')]",
              "location": "[parameters('location')]",
              "kind": "functionapp",
              "properties": {
                "serverFarmId": "[parameters('appServicePlanId')]",
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageAccountName'), parameters('storageAccountKey'))]"
                    },
                    {
                      "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageAccountName'), parameters('storageAccountKey'))]"
                    },
                    {
                      "name": "WEBSITE_CONTENTSHARE",
                      "value": "[toLower(parameters('functionAppName'))]"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~4"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "dotnet"
                    },
                    {
                      "name": "WEBSITE_RUN_FROM_PACKAGE",
                      "value": "1"
                    },
                    {
                      "name": "CosmosDbConnectionString",
                      "value": "[parameters('cosmosDbConnectionString')]"
                    },
                    {
                      "name": "CosmosDbName",
                      "value": "[parameters('cosmosDbName')]"
                    },
                    {
                      "name": "CLIENT_NAME",
                      "value": "[parameters('clientName')]"
                    },
                    {
                      "name": "ENVIRONMENT_NAME",
                      "value": "[parameters('environmentName')]"
                    },
                    {
                      "name": "FUNCTION_TYPE",
                      "value": "[parameters('functionType')]"
                    }
                  ],
                  "netFrameworkVersion": "v6.0",
                  "use32BitWorkerProcess": false,
                  "cors": {
                    "allowedOrigins": [
                      "*"
                    ]
                  },
                  "ftpsState": "Disabled",
                  "minTlsVersion": "1.2",
                  "scmMinTlsVersion": "1.2",
                  "http20Enabled": true,
                  "alwaysOn": false
                },
                "httpsOnly": true,
                "clientAffinityEnabled": false
              },
              "tags": {
                "environment": "[parameters('environmentName')]",
                "client": "[parameters('clientName')]",
                "solution": "witag",
                "managedBy": "bicep",
                "functionType": "[parameters('functionType')]"
              }
            }
          ],
          "outputs": {
            "functionAppName": {
              "type": "string",
              "value": "[parameters('functionAppName')]"
            },
            "defaultHostName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2023-01-01').defaultHostName]"
            },
            "functionAppId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('appServicePlan-{0}-{1}', parameters('clientName'), parameters('environmentName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('cosmosDb-{0}-{1}', parameters('clientName'), parameters('environmentName')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('storageAccount-{0}-{1}', parameters('clientName'), parameters('environmentName')))]"
      ]
    }
  ],
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "value": "[parameters('resourceGroupName')]"
    },
    "cosmosDbAccountName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('cosmosDb-{0}-{1}', parameters('clientName'), parameters('environmentName'))), '2022-09-01').outputs.accountName.value]"
    },
    "cosmosDbConnectionString": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('cosmosDb-{0}-{1}', parameters('clientName'), parameters('environmentName'))), '2022-09-01').outputs.connectionString.value]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('storageAccount-{0}-{1}', parameters('clientName'), parameters('environmentName'))), '2022-09-01').outputs.storageAccountName.value]"
    },
    "appServicePlanId": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('appServicePlan-{0}-{1}', parameters('clientName'), parameters('environmentName'))), '2022-09-01').outputs.planId.value]"
    },
    "coreFunctionApps": {
      "type": "array",
      "copy": {
        "count": "[length(parameters('coreFunctions'))]",
        "input": {
          "name": "[parameters('coreFunctions')[copyIndex()]]",
          "functionAppName": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('coreFunction-{0}-{1}-{2}', parameters('coreFunctions')[copyIndex()], parameters('clientName'), parameters('environmentName'))), '2022-09-01').outputs.functionAppName.value]",
          "defaultHostName": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('coreFunction-{0}-{1}-{2}', parameters('coreFunctions')[copyIndex()], parameters('clientName'), parameters('environmentName'))), '2022-09-01').outputs.defaultHostName.value]"
        }
      }
    },
    "pluginFunctionApps": {
      "type": "array",
      "copy": {
        "count": "[length(parameters('pluginFunctions'))]",
        "input": {
          "name": "[parameters('pluginFunctions')[copyIndex()]]",
          "functionAppName": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('pluginFunction-{0}-{1}-{2}', parameters('pluginFunctions')[copyIndex()], parameters('clientName'), parameters('environmentName'))), '2022-09-01').outputs.functionAppName.value]",
          "defaultHostName": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('pluginFunction-{0}-{1}-{2}', parameters('pluginFunctions')[copyIndex()], parameters('clientName'), parameters('environmentName'))), '2022-09-01').outputs.defaultHostName.value]"
        }
      }
    }
  }
}
