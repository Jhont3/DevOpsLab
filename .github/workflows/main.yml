name: Deploy to Azure Function on PR Merge

on:
  pull_request:
    branches: 
      - main
    types: 
      - closed
    paths:
      - 'TestGitHubPipeline/**'

  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: 'az-func-test-github-pipeline'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'TestGitHubPipeline'
  DOTNET_VERSION: '8.0.x'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    
    - name: Display deployment info
      run: |
        echo "üöÄ Starting deployment after PR merge"
        echo "üì¶ Project: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
        echo "üì¶ .NET Version: ${{ env.DOTNET_VERSION }}"
        echo "üéØ Target: ${{ env.AZURE_FUNCTIONAPP_NAME }}"
        echo "üîÑ Trigger: ${{ github.event_name }}"
    
    - name: Restore dependencies
      run: dotnet restore ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
    
    - name: Build project
      run: dotnet build ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }} --configuration Release --no-restore
    
    - name: Run tests (if any)
      run: dotnet test ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }} --configuration Release --no-build --verbosity normal
      continue-on-error: true
    
    - name: Publish project
      run: dotnet publish ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }} -c Release -o ./publish
    
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to Azure Function App
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: './publish'
    
    - name: Deployment completed
      run: |
        echo "‚úÖ Deployment completed successfully to ${{ env.AZURE_FUNCTIONAPP_NAME }}"
        echo "üåê Your Azure Function is now updated and running!"
        echo "üìÖ Deployment time: $(date)"
        echo "üîó PR #${{ github.event.pull_request.number }} changes deployed"
